# This workflow builds and tests the macostranslate app
# The app requires macOS-specific frameworks (Carbon, Cocoa) and AppleScript

name: macOS Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  packages: write
  actions: read

jobs:

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: |
        # Ensure Xcode command line tools are available
        sudo xcode-select --install || true
        
    - name: Build for macOS
      run: |
        # Build with CGO enabled for Carbon framework
        # Set build tags for macOS to avoid Linux dependencies
        CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -v -tags darwin -o macostranslate-arm64 .
        CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -v -tags darwin -o macostranslate-amd64 .
        
    - name: Create universal binary
      run: |
        lipo -create -output macostranslate macostranslate-arm64 macostranslate-amd64
        
    - name: Test build
      run: |
        file macostranslate
        ./macostranslate --help
        
    - name: Run tests
      run: |
        # Note: Tests may be limited without a GUI environment
        go test -v ./... || echo "No tests found"
        
    - name: Create release package
      run: |
        # Create a tarball with all binaries
        if [ "${{ github.event_name }}" == "push" ]; then
          VERSION="${{ github.sha }}"
        else
          VERSION=$(date +%Y%m%d-%H%M%S)
        fi
        
        mkdir -p release
        cp macostranslate release/
        cp macostranslate-arm64 release/
        cp macostranslate-amd64 release/
        
        # Create checksums
        cd release
        shasum -a 256 macostranslate* > checksums.txt
        cd ..
        
        # Create tarball
        PACKAGE_NAME="macostranslate-${VERSION}.tar.gz"
        tar -czf "${PACKAGE_NAME}" -C release .
        
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV
        
    - name: Update brew formula
      if: github.event_name == 'push'
      run: |
        # Create a package version identifier using short SHA
        SHORT_SHA=$(echo "${{ github.sha }}" | head -c 7)
        
        # Calculate SHA256 checksum
        SHA256_CHECKSUM=$(shasum -a 256 "${PACKAGE_NAME}" | cut -d' ' -f1)
        
        # Copy the sample formula and update it with actual values
        echo "Updating brew formula with release data..."
        cp homebrew.rb macostranslate.rb
        
        # Update the placeholders in the formula
        sed -i '' "s/PLACEHOLDER_VERSION/$SHORT_SHA/g" macostranslate.rb
        sed -i '' "s|PLACEHOLDER_URL|https://github.com/techt3/macostranslate/releases/download/v$SHORT_SHA/$PACKAGE_NAME|g" macostranslate.rb
        sed -i '' "s/PLACEHOLDER_SHA256/$SHA256_CHECKSUM/g" macostranslate.rb
        
        echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
        echo "SHA256_CHECKSUM=${SHA256_CHECKSUM}" >> $GITHUB_ENV
        
   
    - name: Create GitHub release
      if: github.event_name == 'push'
      run: |
        # Create GitHub release
        gh release create "v$SHORT_SHA" \
          --title "macostranslate v$SHORT_SHA" \
          --notes "Automated release of macostranslate universal binary for commit ${{ github.sha }}" \
          --repo "${{ github.repository }}" \
          --latest \
          "$PACKAGE_NAME" \
          "macostranslate.rb" 
          
        echo ""
        echo "‚úÖ Package uploaded successfully to GitHub Packages!"
        echo ""
        echo "üì¶ Installation options:"
        echo ""
        echo "1. üç∫ Manual Brew Install (Recommended):"
        echo "   # Download and install the formula locally"
        echo "   curl -L https://github.com/${{ github.repository }}/releases/latest/download/macostranslate.rb -o /tmp/macostranslate.rb"
        echo "   brew install /tmp/macostranslate.rb"
        echo ""
        echo "2. üì• Direct download:"
        echo "   curl -L https://github.com/${{ github.repository }}/releases/latest/download/$PACKAGE_NAME -o macostranslate.tar.gz"
        echo "   tar -xzf macostranslate.tar.gz"
        echo "   sudo cp macostranslate /usr/local/bin/"
        echo ""
        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts (for pull requests)
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: macostranslate-universal
        path: |
          macostranslate
          macostranslate-arm64
          macostranslate-amd64
          release/checksums.txt
